package org.demo.basics;

import org.demo.entities.Student;
import org.demo.util.PersistenceUtil;
import org.hibernate.Session;

import java.time.LocalDate;

/**
 * @author Auodumbar
 * <p>
 * The effect of saving an already persisted instance is the same as with persist.
 * The difference comes when we try to save a detached instance:
 */
public class SaveMethod {
    public static void main(String[] args) {
        Session session = PersistenceUtil.getHibernateSession();
         //Begin the transaction
        session.getTransaction().begin();

        //save()  is deprecated since version 6.0
        //The save() method is used make a TRANSIENT entity PERSISTENT by associating it with either an org.hibernate.Session.
        //Before persisting the entity, it assigns a generated identifier to the ID field.
        //The save() method returns the generated identifier so it has to immediately execute the SQL INSERT statement (it does not matter if we are inside or outside a transaction)
        //because identifiers are generated by the database during the INSERT query execution only.
        Student student = new Student("Rushikesh", LocalDate.now(), "Nepal");
        //In this case db is postgres, so sequence is called and value is set to student.id
        //May not fire insert query on this line, but it will add insert query in insertionList of session's ActionQueue later it will execute all the queries from this list
        session.save(student);

        // Evict the entity from the session (make it detached)
        session.evict(student);
        System.out.println("Student evicted from session");

        // Modify the detached entity
        student.setCountry("Canada");
        System.out.println("Updated (detached) Student: " + student);

        // Now, if we use save() on a detached object, it will cause a problem.
        // Hibernate may treat this as a new entity and try to insert it.
        session.save(student);  // Hibernate may try to insert the student again, so 2 records will insert in DB(from insertionList of ActionQueue)

        session.getTransaction().commit();
        session.close();

        Session session2 = PersistenceUtil.getHibernateSession();

        session2.getTransaction().begin();

        Student student2 = session2.get(Student.class, 4652);

        student2.setCountry("USA");
        session2.save(student2); //Update the student country to USA

        session2.getTransaction().commit();
        session2.close();


    }
}
